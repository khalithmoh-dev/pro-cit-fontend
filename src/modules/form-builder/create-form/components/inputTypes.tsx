import { FieldIF } from '../../../../interface/component.interface';

const inputTypes: FieldIF[] = [
  {
    name: 'Plain Text',
    type: 'plainText',
    inputLabel: '',
    keyName: '',
    value: '',
    initialValue: '',
    errorMessage: '',
    icon: 'PlainTextIconComponent',
    settings: [
      { settingType: 'nonEmpty', value: false, name: 'Non Empty' },
      { settingType: 'minLength', value: null, name: 'Min Length' },
      { settingType: 'maxLength', value: 1000, name: 'Max Length' },
      { settingType: 'onlyLettersWithSingleSpace', value: false, name: 'Only letters with single space' },
      { settingType: 'onlyLettersAndNumbers', value: false, name: 'Only letters and numbers' },
    ],
  },
  {
    name: 'Multiline Text',
    type: 'multiLineText',
    inputLabel: '',
    keyName: '',
    value: '',
    initialValue: '',
    errorMessage: '',
    icon: 'PlainTextIconComponent',
    settings: [
      { settingType: 'nonEmpty', value: false, name: 'Non Empty' },
      { settingType: 'minLength', value: null, name: 'Min Length' },
      { settingType: 'maxLength', value: 10000, name: 'Max Length' },
    ],
  },
  {
    name: 'Number',
    type: 'number',
    inputLabel: '',
    keyName: '',
    value: '',
    initialValue: '',
    errorMessage: '',
    icon: 'NumberIconComponent',
    settings: [
      { settingType: 'nonZero', value: false, name: 'Non Zero' },
      { settingType: 'noDecimals', value: null, name: 'No Decimals' },
      { settingType: 'min', value: null, name: 'Minimum' },
      { settingType: 'max', value: 10000000000, name: 'Maximum' },
      { settingType: 'minDigits', value: null, name: 'Minimum Digits' },
      { settingType: 'maxDigits', value: 100, name: 'Maximum Digits' },
    ],
  },
  {
    name: 'Email',
    type: 'email',
    inputLabel: '',
    keyName: '',
    value: '',
    initialValue: '',
    errorMessage: '',
    icon: 'EmailIconComponent',
    settings: [
      { settingType: 'nonEmpty', value: false, name: 'Non Empty' },
      { settingType: 'exceptDomains', value: [], name: 'Except Domains(comma seperated)' },
      { settingType: 'onlyDomains', value: [], name: 'Only Domains(comma seperated)' },
    ],
  },
  {
    name: 'Single Select',
    type: 'singleSelect',
    inputLabel: '',
    keyName: '',
    value: '',
    initialValue: '',
    errorMessage: '',
    icon: 'SelectIconComponent',
    settings: [
      { settingType: 'nonEmpty', value: false, name: 'Non Empty' },
      { settingType: 'options', value: [], name: 'Options(comma seperated)' },
      { settingType: 'enableDynamincOption', value: false, name: 'Enable Dynaminc Option' },
      { settingType: 'dynamincOptionIndex', value: 0, name: 'Dynaminc Option index' },
    ],
  },
  {
    name: 'Multi Select',
    type: 'multiSelect',
    inputLabel: '',
    keyName: '',
    value: [],
    initialValue: [],
    errorMessage: '',
    icon: 'SelectIconComponent',
    settings: [
      { settingType: 'nonEmpty', value: false, name: 'Non Empty' },
      { settingType: 'options', value: [], name: 'Options(comma seperated)' },
      { settingType: 'enableDynamincOption', value: false, name: 'Enable Dynaminc Option' },
      { settingType: 'dynamincOptionIndex', value: 0, name: 'Dynaminc Option index' },
    ],
  },
  {
    name: 'Checkbox',
    type: 'checkbox',
    inputLabel: '',
    keyName: '',
    value: false,
    initialValue: false,
    errorMessage: '',
    icon: 'CheckboxIconComponent',
    settings: [
      { settingType: 'defaultChecked', value: false, name: 'Default Checked' },
      { settingType: 'expectedTrue', value: false, name: 'Expected True' },
      { settingType: 'expectedFalse', value: false, name: 'Expected False' },
    ],
  },
  {
    name: 'Date',
    type: 'date',
    inputLabel: '',
    keyName: '',
    value: '',
    initialValue: '',
    errorMessage: '',
    icon: 'CalendarIconComponent',
    settings: [
      { settingType: 'required', value: false, name: 'Required' },
      { settingType: 'minDate', value: null, name: 'Min Date' },
      { settingType: 'maxDate', value: null, name: 'Max Date' },
    ],
  },
  {
    name: 'Time',
    type: 'time',
    inputLabel: '',
    keyName: '',
    value: '',
    initialValue: '',
    errorMessage: '',
    icon: 'CalendarIconComponent',
    settings: [{ settingType: 'required', value: false, name: 'Required' }],
  },
  {
    name: 'File',
    type: 'file',
    inputLabel: '',
    keyName: '',
    value: '',
    initialValue: '',
    errorMessage: '',
    icon: 'FileIconComponent',
    settings: [
      { settingType: 'required', value: false, name: 'Required' },
      { settingType: 'accept', value: '', name: 'Accept' },
    ],
  },
  {
    name: 'Multi String',
    type: 'multiString',
    inputLabel: '',
    keyName: '',
    value: [''],
    initialValue: [''],
    errorMessage: '',
    icon: 'SelectIconComponent',
    settings: [{ settingType: 'nonEmpty', value: false, name: 'Non Empty' }],
  },
  {
    name: 'Section Header',
    type: 'sectionHeader',
    inputLabel: '',
    keyName: '',
    value: '',
    initialValue: '',
    errorMessage: '',
    icon: 'PlainTextIconComponent',
    settings: [],
  },
  {
    name: 'Nested Form',
    type: 'nestedForm',
    inputLabel: '',
    keyName: '',
    value: '',
    initialValue: '',
    errorMessage: '',
    icon: 'PlainTextIconComponent',
    settings: [{ settingType: 'nonEmpty', value: false, name: 'Required' }],
    hide: false,
  },
];
export default inputTypes;
